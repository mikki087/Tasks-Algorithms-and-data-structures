#include <iostream>
using namespace std;

int miller(int64_t n);
void ferma(int64_t n);


int64_t pow_mod(int64_t a, int64_t b, int64_t n)
{
	if (b == 0)
	{
		return 1;
	}
	int64_t c = pow_mod(a, b / 2, n);
	if (b % 2 == 0)
	{
		return c * c % n;
	}
	else
	{
		return ((a % n) * ((c * c) % n)) % n;

	}
}

int main()
{
	int64_t n;
	cin >> n;
	miller(n), cout << "\n";
	ferma(n);

}

int miller(int64_t n)
{
	//базовые случаи
	if (n<2)
		return 0;

	int64_t s = n - 1;
	int k = 0;
	//определим чему равно q;
	while (s % 2 == 0)
	{
		s /= 2;
		k++;
	}
	//запускаем перебор
	int ans1 = 0;
	int ans2 = 0;
	for (int a = 1; a <= n; ++a)
	{
		int64_t q = s;
		int64_t mod = pow_mod(a, q, n);
		if (mod == 1)
		{
			ans1 += 1;
		}
		
		for (int i = 0; i <= k; ++i)
		{
			if (i>0)
				q *= 2;
			if (pow_mod(a, q, n) == n-1)
			{
				ans2 += 1;
			}
		}

	}
	cout << "Miller-Rabin test: ";
	if (ans1+ans2==n-1)
		cout << "True " << n-1 - ans1 - ans2 << " " << ans1 << " " << ans2;
	else
		cout << "False " << n - 1 - ans1 - ans2 << " " << ans1 << " " << ans2;
	return 0;
}


void ferma(int64_t n)
{
	int ans = 0;
	for (int a = 1; a<n; ++a)
	{
		if (pow_mod(a, n - 1, n) == 1)
		{
			ans += 1;
		}
			
	}
	cout << "Fermat test: ";
	if (ans==n-1)
	{
		cout << "True " << n-1-ans << " " << ans;
	}
	else
	{
		cout << "False " << n - 1 - ans << " " << ans;
	}
	return;
}

